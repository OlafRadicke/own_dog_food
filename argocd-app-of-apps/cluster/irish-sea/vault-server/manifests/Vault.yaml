apiVersion: vault.banzaicloud.com/v1alpha1
# https://github.com/bank-vaults/vault-operator/blob/main/deploy/examples/cr-file.yaml
kind: Vault
metadata:
  name: vault
spec:
  size: 3
  # image: hashicorp/vault:1.14.8
  # bankVaultsImage: ghcr.io/bank-vaults/bank-vaults:latest

  serviceAccount: vault-01

  # Use local disk to store Vault file data, see config section.
  volumes:
    - name: vault-01-file
      persistentVolumeClaim:
        claimName: vault-01-file

  volumeMounts:
    - name: vault-01-file
      mountPath: /vault/file

  # Support for distributing the generated CA certificate Secret to other namespaces.
  # Define a list of namespaces or use ["*"] for all namespaces.
  caNamespaces:
    - "*"

  # Describe where you would like to store the Vault unseal keys and root token.
  unsealConfig:
    options:
      # The preFlightChecks flag enables unseal and root token storage tests
      # This is true by default
      preFlightChecks: true
      # The storeRootToken flag enables storing of root token in chosen storage
      # This is true by default
      storeRootToken: true
      # The secretShares represents the total number of unseal key shares
      # This is 5 by default
      secretShares: 5
      # The secretThreshold represents the minimum number of shares required to reconstruct the unseal key
      # This is 3 by default
      secretThreshold: 3
    kubernetes:
      secretNamespace: default

  # A YAML representation of a final vault config file.
  # See https://www.vaultproject.io/docs/configuration/ for more information.
  config:
    storage:
      file:
        path: /vault/file
    listener:
      tcp:
        address: 0.0.0.0:8200
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    ui: true
    log_level: debug

  # See: https://banzaicloud.com/docs/bank-vaults/cli-tool/#example-external-vault-configuration
  # The repository also contains a lot examples in the test/deploy and operator/deploy directories.
  externalConfig:
    policies:
      - name: allow_secrets
        rules: |
          path "secret/*" {
            capabilities = ["create", "read", "update", "delete", "list"]
          }

    auth:
      - type: kubernetes
        roles:
          # Allow every pod in the default namespace to use the secret kv store
          - name: default
            bound_service_account_names: ["*"]
            bound_service_account_namespaces: ["default"]
            policies: ["allow_secrets"]
            ttl: 1h


    # secrets:
    #   - path: secret
    #     type: kv
    #     description: General secrets.
    #     options:
    #       version: 2
    secrets:
      - path: secret
        type: kv
        options:
          version: 2

    # Allows writing some secrets to Vault (useful for development purposes).
    # See https://www.vaultproject.io/docs/secrets/kv/index.html for more information.
    startupSecrets:
      - type: kv
        path: secret/data/accounts/aws
        data:
          data:
            AWS_ACCESS_KEY_ID: secretId
            AWS_SECRET_ACCESS_KEY: s3cr3t

      - type: kv
        path: secret/data/dockerrepo
        data:
          data:
            DOCKER_REPO_USER: dockerrepouser
            DOCKER_REPO_PASSWORD: dockerrepopassword

      - type: kv
        path: secret/data/mysql
        data:
          data:
            MYSQL_ROOT_PASSWORD: s3cr3t
            MYSQL_PASSWORD: 3xtr3ms3cr3t


  # Marks presence of Istio, which influences things like port namings
  istioEnabled: false


