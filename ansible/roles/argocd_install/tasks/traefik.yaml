---

# - name: set TLSOption for ArgoCD
#   kubernetes.core.k8s:
#     kubeconfig:                 "{{ argocd_kubeconfig }}"
#     state:                      "{{ argocd_deployment_state }}"
#     namespace:                  "{{ argocd_namespace }}"
#     definition:
#       apiVersion:               traefik.containo.us/v1alpha1
#       kind:                     TLSOption
#       metadata:
#         name:                   "tls-options-{{ argocd_app_name }}"
#         namespace:              "{{ argocd_namespace }}"
#       spec:
#         minVersion:             VersionTLS12
#         cipherSuites:
#                                 - TLS_CHACHA20_POLY1305_SHA256
#                                 - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
#                                 - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
#                                 # - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
#                                 - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
#                                 - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
#                                 - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
#                                 - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
#                                 # - TLS_AES_256_GCM_SHA384
#                                 # - TLS_AES_128_GCM_SHA256
#                                 - TLS_FALLBACK_SCSV
#         curvePreferences:
#                                 - CurveP521
#                                 - CurveP384
#         sniStrict:              false


- name: set mTLS Option vor ArgoCD
  kubernetes.core.k8s:
    kubeconfig:                 "{{ argocd_kubeconfig }}"
    state:                      "{{ argocd_deployment_state }}"
    namespace:                  "{{ argocd_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     TLSOption
      metadata:
        name:                   "m-tls-options-{{ argocd_app_name }}"
        namespace:              "{{ argocd_namespace }}"
      spec:
        minVersion:             VersionTLS12
        cipherSuites:
                                - TLS_CHACHA20_POLY1305_SHA256
                                - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
                                - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
                                - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
                                - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
                                - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
                                - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
                                # - TLS_AES_256_GCM_SHA384
                                # - TLS_AES_128_GCM_SHA256
                                - TLS_FALLBACK_SCSV
        curvePreferences:
                                - CurveP521
                                - CurveP384
        sniStrict:              false
        clientAuth:
          clientAuthType:   RequireAndVerifyClientCert
          # in PEM format. each file can contain multiple CAs.
          secretNames:
            -                   mtls-ca

- name: create a Middleware object for ArgoCD
  kubernetes.core.k8s:
    kubeconfig:                 "{{ argocd_kubeconfig }}"
    state:                      "{{ argocd_deployment_state }}"
    namespace:                  "{{ argocd_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     Middleware
      metadata:
        name:                   middleware-http-to-https
        namespace:              "{{ argocd_namespace }}"
      spec:
        redirectScheme:
          scheme:               https
          permanent:            true


- name: IngressRoute for ArogoCD with letsencrypt / mTLS support
  kubernetes.core.k8s:
    kubeconfig:                 "{{ argocd_kubeconfig }}"
    state:                      "{{ argocd_deployment_state }}"
    namespace:                  "{{ argocd_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   "https-{{ argocd_app_name }}"
        namespace:              "{{ argocd_namespace }}"
      spec:
        entryPoints:
          -                     websecure
        routes:
          - match:              "{{ argocd_fqdn_match }}"
            kind:               Rule
            services:
            - name:             argocd-server
              port:             80
        tls:
          certResolver:         le
          options:
            name:               "m-tls-options-{{ argocd_app_name }}"
            namespace:          "{{ argocd_namespace }}"
  when:                         
    -                           argocd_letsencrypt == true
    -                           argocd_mtls == true


- name: IngressRoute for ArgoCD for mTLS
  kubernetes.core.k8s:
    kubeconfig:                 "{{ argocd_kubeconfig }}"
    state:                      "{{ argocd_deployment_state }}"
    namespace:                  "{{ argocd_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   "mtls-routes-{{ argocd_app_name }}"
        namespace:              "{{ argocd_namespace }}"
      spec:
        entryPoints:
          -                     websecure
        routes:
          - match:              "{{ argocd_fqdn_match }}"
            kind:               Rule
            services:
            - name:             argocd-server
              port:             80
        tls:
          options: 
            name:               "m-tls-options-{{ argocd_app_name }}"
            namespace:          "{{ argocd_namespace }}"
  when:                         
    -                           argocd_letsencrypt == false
    -                           argocd_mtls == true


- name: IngressRoute for ArgoCD redirect http to https
  kubernetes.core.k8s:
    kubeconfig:                 "{{ argocd_kubeconfig }}"
    state:                      "{{ argocd_deployment_state }}"
    namespace:                  "{{ argocd_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   "http-{{ argocd_app_name }}"
        namespace:              "{{ argocd_namespace }}"
      spec:
        entryPoints:
          -                     web
        routes:
          - match:              "{{ argocd_fqdn_match }}"
            kind:               Rule
            services:
            - name:             argocd-server
              port:             80
            middlewares:
            - name:             middleware-http-to-https
              namespace:        "{{ argocd_namespace }}"