apiVersion: v1
kind: PersistentVolume
metadata:
  name: s3-pv
spec:
  capacity:
    storage: 2Gi # Ignored, required
  accessModes:
    - ReadWriteMany # Supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "s3-pv-sc" # Required for static provisioning
  claimRef: # To ensure no other PVCs can claim this PV
    namespace: storage # Namespace is required even though it's in "default" namespace.
    name: s3-pvc # Name of your PVC
  mountOptions:
    - endpoint-url https://hel1.your-objectstorage.com
    - allow-delete
    # - region eu-central
    # - prefix some-s3-prefix/
  csi:
    driver: s3.csi.aws.com # Required
    volumeHandle: s3-csi-driver-volume # Must be unique
    volumeAttributes:
      bucketName: egwsmpsfx

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3-pvc
spec:
  accessModes:
    - ReadWriteMany # Supported options: ReadWriteMany / ReadOnlyMany
  storageClassName: "s3-pv-sc" # Required for static provisioning
  resources:
    requests:
      storage: 1Gi # Ignored, required
  # volumeName: s3-pv # Name of your PV

# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: s3-app
# spec:
#   containers:
#     - name: app
#       image: ubuntu
#       command: ["/bin/sh"]
#       args: ["-c", "echo 'Hello from the container!' >> /data/$(date -u).txt; tail -f /dev/null"]
#       volumeMounts:
#         - name: persistent-storage
#           mountPath: /data
#   volumes:
#     - name: persistent-storage
#       persistentVolumeClaim:
#         claimName: s3-pvc