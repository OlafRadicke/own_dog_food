---

- name: Create a directory for k3s PVCs
  ansible.builtin.file:
    path:                       "{{ prometheus_pvc_dir }}"
    state:                      directory
    recurse:                    true


- name: Create PersistentVolume
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "{{ prometheus_pvc_state }}"
    wait:                       yes
    namespace:                  "{{ prometheus_namespace }}"
    definition:
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: "{{ prometheus_pvc_prefix }}-pv-{{ item }}"
        namespace: "{{ prometheus_namespace }}"
        labels:
          app: prometheus-main
        finalizers:
        - kubernetes.io/pv-protection
      spec:
        capacity:
          storage: 10Gi
        volumeMode: Filesystem
        accessModes:
        - ReadWriteOnce
        persistentVolumeReclaimPolicy: Retain
        # Delete
        storageClassName: local-path
        local:
          path: "/{{ prometheus_pvc_dir }}/{{ prometheus_pvc_prefix }}-pv-{{ item }}"
        # hostPath:
        #   path: /tmp/prometheus-main-pv
        #   type: DirectoryOrCreate
        nodeAffinity:
          required:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - "{{ inventory_hostname_short }}"
  loop:
    - alertmanager
    - server
    - pushgateway

- name: "Create PersistentVolumeClaim"
  kubernetes.core.k8s:
    kubeconfig:                 "{{ global_kubeconfig }}"
    state:                      "absent"
     #"{{ prometheus_pvc_state }}"
    wait:                       yes
    namespace:                  "{{ prometheus_namespace }}"
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        labels:
          app: prometheus
          app.kubernetes.io/instance: prometheus-main
          chart: prometheus-15.9.1
          component: server
          release: prometheus-main
        name: "{{ prometheus_pvc_prefix }}-pvc-{{ item }}"
        namespace: "{{ prometheus_namespace }}"
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: local-path
        volumeName: "{{ prometheus_pvc_prefix }}-pv-{{ item }}"
        volumeMode: Filesystem
        selector:
          matchLabels:
            app: prometheus-main-pv
  loop:
    - alertmanager
    - server
    - pushgateway

