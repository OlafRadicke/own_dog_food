---



################ IngressRoute ################

- name: create a IngressRoute object https-the-independent-friend-de
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               networking.k8s.io/v1
      kind:                     Ingress
      metadata:
        name:                   the-independent-friend-de
        namespace:              "{{ k3s_namespace }}"
        annotations:
            kubernetes.io/ingress.class: traefik
            cert-manager.io/cluster-issuer: letsencrypt-prod
      spec:
        entryPoints:
          -                     websecure
        # routes:
        #   - match:              Host(`the-independent-friend.de`)
        #     kind:               Rule
        #     services:
        #       - name:           the-independent-friend-de
        #         port:           80

        rules:
          - host: "the-independent-friend.de"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name:  the-independent-friend-de
                      port:
                        number: 80
            https:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name:  the-independent-friend-de
                      port:
                        number: 443


- name: create a IngressRoute object https-the-independent-friend-de
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   the-independent-friend-de
        namespace:              "{{ k3s_namespace }}"
      spec:
        entryPoints:
          -                     websecure
        routes:
          - kind:               Rule
            match:              Host(`the-independent-friend.de`)
            service:
              - name:           the-independent-friend-de
                port:           80
        tls: {}

- name: create a Middleware object https-ingressroute
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     Middleware
      metadata:
        name:                   middleware-the-independent-friend-de
        namespace:              "{{ k3s_namespace }}"
      spec:
        redirectScheme:
          scheme:               https
          permanent:            true

- name: create a IngressRoute object http-the-independent-friend-de
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   the-independent-friend-de
        namespace:              "{{ k3s_namespace }}"
      spec:
        entryPoints:
          -                     web
        routes:
          - match:              Host(`the-independent-friend.de`)
            kind:               Rule
            services:
              - name:           the-independent-friend-de
                port:           80
            middlewares:
              - name:           middleware-the-independent-friend-de
                namespace:      "{{ k3s_namespace }}"


################ letsencrypt ################

- name: traefik update
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               helm.cattle.io/v1
      kind:                     HelmChartConfig
      metadata:
        name:                   traefik
        namespace:              kube-system
      spec:
        valuesContent: |-
          additionalArguments:
            - "--log.level=DEBUG"
            - "--certificatesresolvers.le.acme.email={{ k3s_acme_email }}"
            - "--certificatesresolvers.le.acme.storage=/data/acme.json"
            - "--certificatesresolvers.le.acme.tlschallenge=true"
            - "--certificatesresolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
  when: k3s_letsencrypt == "yes"


# - name: set TLSOption
#   kubernetes.core.k8s:
#     kubeconfig:                 "{{ k3s_kubeconfig }}"
#     state:                      "{{ k3s_deployment_state }}"
#     namespace:                  "{{ k3s_namespace }}"
#     definition:
#       apiVersion: traefik.containo.us/v1alpha1
#       kind: TLSOption
#       metadata:
#         name: tlsoptions
#         namespace: dev
#       spec:
#         minVersion: VersionTLS12
#         cipherSuites:
#           - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
#           - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
#           - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
#           - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
#           - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
#           - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
#           - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
#           - TLS_AES_256_GCM_SHA384
#           - TLS_AES_128_GCM_SHA256
#           - TLS_CHACHA20_POLY1305_SHA256
#           - TLS_FALLBACK_SCSV
#         curvePreferences:
#           - CurveP521
#           - CurveP384
#         sniStrict: false


- name: new ingress route
  kubernetes.core.k8s:
    kubeconfig:                 "{{ k3s_kubeconfig }}"
    state:                      "{{ k3s_deployment_state }}"
    namespace:                  "{{ k3s_namespace }}"
    definition:
      apiVersion:               traefik.containo.us/v1alpha1
      kind:                     IngressRoute
      metadata:
        name:                   letsencrypt-routing
        namespace:              "{{ k3s_namespace }}"
      spec:
        entryPoints:
          -                     websecure
        routes:
        - kind:                 Rule
          match:                Host(`olaf-radicke.de`)
          services:
          - name:               olaf-radicke-de
            port:               80
        - kind:                 Rule
          match:                Host(`the-independent-friend.de`)
          services:
          - name:               the-independent-friend-de
            port:               80
        tls:
          certResolver:         le
          # options:
          #   name: tlsoptions
          #   namespace: dev
  when: k3s_letsencrypt == "yes"